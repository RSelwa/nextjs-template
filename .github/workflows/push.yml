name: 🧪

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
  pull_request:

jobs:
  build:
    name: ✅ Lint and Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 🧶 Set up Node.js
        uses: ./.github/actions/init-pnpm

      - name: 🏗️ Build app
        uses: ./.github/actions/build

      - name: 🚨 Lint
        run: pnpm run lint

  unit-test:
    name: 🧪 Unit Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: 🧶 Set up Node.js
        uses: ./.github/actions/init-pnpm

      - name: 🏗️ Build app
        uses: ./.github/actions/build

      - name: 🧪 Run unit tests
        run: pnpm run test:unit

  playwright-test:
    name: ⚗ Playwright Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: 🧶 Set up Node.js
        uses: ./.github/actions/init-pnpm

      - name: 🏗️ Build app
        uses: ./.github/actions/build

      - name: 🌐 Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: 🧪 Run Playwright tests
        run: pnpm run test:e2e-ci

      - name: 📊 Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  cleanup:
    name: 🫧 Clean build cache
    runs-on: ubuntu-latest
    needs: [playwright-test, unit-test]
    if: success()
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v4

      - name: 🫧 Clean build cache
        run: gh cache delete ${{ github.sha }}-build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  vercel:
    name: 🔼 Deploy to vercel
    runs-on: ubuntu-latest
    needs: [playwright-test, unit-test]
    if: success()
    steps:
      - uses: actions/checkout@v4

      - name: 🧶 Set up Node.js
        uses: ./.github/actions/init-pnpm

      - name: 🔼 Install Vercel CLI
        run: pnpm install --global vercel@canary

        # Production deployments
      - name: ⬇ Pull Vercel Production Environment Information
        if: ${{ github.ref == 'refs/heads/main' }}
        run: vercel pull --yes --environment=production --token=${{  secrets.VERCEL_TOKEN}}

      - name: 🏗️ Build Production Project Artifacts
        if: ${{ github.ref == 'refs/heads/main' }}
        run: vercel build --prod --token=${{  secrets.VERCEL_TOKEN }}

      - name: 🔼 Deploy Project Artifacts to Vercel
        if: ${{ github.ref == 'refs/heads/main' }}
        run: vercel deploy --prebuilt --prod --token=${{  secrets.VERCEL_TOKEN }}

        # Preview deployments
      - name: ⬇ Pull Vercel Preview Environment Information
        if: ${{ github.ref != 'refs/heads/main' }}
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🏗️ Build Preview Project Artifacts
        if: ${{ github.ref != 'refs/heads/main' }}
        run: vercel build --token=${{  secrets.VERCEL_TOKEN }}

      - name: 🔼 Deploy Project Artifacts to Vercel
        if: ${{ github.ref != 'refs/heads/main' }}
        run: vercel deploy --prebuilt --token=${{  secrets.VERCEL_TOKEN }}
